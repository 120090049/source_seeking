import os
import matplotlib.pyplot as plt

def read_data_from_file(file_path):
    """读取文件中的数据并转换为列表"""
    data = []
    with open(file_path, 'r') as file:
        for line in file:
            # Convert each line to a float and append to the data list
            data.append(float(line.strip()))
    print(data)
    return data
    
def plot_data(folder_path):
    """读取文件夹中所有txt文件的数据，并绘制折线图"""
    file_names = sorted([f for f in os.listdir(folder_path) if f.endswith('.txt')])
    for file_name in file_names:
        if file_name.endswith('.txt'):
            file_path = os.path.join(folder_path, file_name)
            data = read_data_from_file(file_path)
            plt.plot(data, label=file_name)

    plt.xlabel('Time')
    plt.ylabel('Value')
    plt.title('Line Graphs from Text Files')
    plt.legend()
    plt.show()

# 用你的文件夹路径替换这里的 'your_folder_path'
# folder_path = './'
# plot_data(folder_path)
data_greedy_ucb_3 = [0.035785519480226465, 0.035785519586247955, 0.03410088011654105, 0.0331605910440884, 0.03220341371292759, 0.03282768212412234, 0.03677438866006328, 0.03862384033682122, 0.03842237083268378, 0.03763562656499979, 0.036660098855362755, 0.03632880163047251, 0.03634858851650362, 0.036196307606457846, 0.035840374726022535, 0.03590944018782385, 0.03573346351253543, 0.03512402589693612, 0.03504159063971396, 0.0350246299225743, 0.035221411380748635, 0.03551210740931526, 0.03581904707541292, 0.03607985742109252, 0.03625121775515169, 0.03593119703105688, 0.03581453662029123, 0.035319488263408125, 0.034525403123323674, 0.03425520238306167, 0.034157059745557196, 0.033644841009027544, 0.03357662908696393, 0.033315914723354066, 0.03344813208281661, 0.033431822267833186, 0.0289723446068277, 0.028023888079972938, 0.02540776347398415, 0.024667010333646596, 0.02507058344858362, 0.02508570385127974, 0.024635596304034835, 0.022423099254929756, 0.020788234628281853, 0.020762417696831487, 0.020847472543940246, 0.017992003661358467, 0.01547114720991376, 0.014858792576155593, 0.01448202058107353, 0.010377711100598153, 0.007593725698300009, 0.00884618733517995, 0.008765408598512383, 0.00851824029098672, 0.008588168833660006, 0.00876343796891455, 0.008929671475946605, 0.008926346985129539, 0.008585306638438869, 0.008456199056689106, 0.008122805855297613, 0.007999725710236966, 0.007905200862555327, 0.007825372037704361, 0.00785409967982873, 0.007831639926051497, 0.0079466873972499, 0.00828943442872779, 0.00711389328328439, 0.004632899375642363, 0.0033859934471405584, 0.0036294635086253505, 0.0037054064743601437, 0.0033340895622169012]
data_greedy_ucb_3_no_prior = [0.05478200901906885, 0.055326539097891834, 0.05039720002915709, 0.05100698046210769, 0.05010458122887684, 0.04973485964394979, 0.04905513269063061, 0.05101471567267402, 0.050661263361211135, 0.05031922702819884, 0.05138651227386776, 0.05141497681225834, 0.05204020401166794, 0.0523358078282354, 0.052607742109167376, 0.052462254987265186, 0.05205690091574845, 0.05194573780068489, 0.05177937862398093, 0.05077970046995368, 0.04973880306078764, 0.049643108814839375, 0.049116983412663164, 0.04788251097967477, 0.04774437472223105, 0.04792205242267079, 0.04852666327722831, 0.04831949221607866, 0.047878754475595885, 0.04647252458258558, 0.045329556057313244, 0.04433687659595599, 0.04426874577544753, 0.0426315964455729, 0.037699547449923015, 0.03160711322706472, 0.029001268307424135, 0.028878738403100134, 0.026035062003404205, 0.024478911465697584, 0.024891225240225325, 0.025616293761089662, 0.02753032808698398, 0.026385709346779133, 0.025780539459919205, 0.026140121789316, 0.025901473158638316, 0.0255320196877246, 0.025728462763385834, 0.025271571670659774, 0.023303874614601785, 0.022630245579836002, 0.02247866665244576, 0.02240271782923061, 0.022282743258996394, 0.021962170669058152, 0.021571822164273523, 0.021253087970019912, 0.02130417195014594, 0.021165963870148845, 0.021068205919176658, 0.021087407547640345, 0.021041273234078815, 0.020987438516570905, 0.020988009582299797, 0.021007034703892657, 0.020979077286639294, 0.021180549018593554, 0.021268760778916113, 0.02122456471974113, 0.021304296236304393, 0.02128369022265196, 0.02131810135856742, 0.021326930903798426, 0.021346633954576213, 0.02134813553954029, 0.019961140873733012, 0.019475266764146515, 0.01766844912717113, 0.012982123028437187, 0.009282380273473986, 0.009262256296769755, 0.009164943519911022, 0.009597961520240613, 0.009315061152607048, 0.008991336072677396, 0.009135485035356213, 0.00923703172688461, 0.009042211775864567, 0.009035864215912357, 0.009000014076622334, 0.00877183835147625, 0.008589364828297526, 0.008364421635133661, 0.007809726950556966, 0.0063511800499731885, 0.0062268875140020444, 0.00565232931485955, 0.0044095833665172245, 0.0035669044466006307, 0.003578985963525109, 0.0037918542757139424, 0.003628707301256244, 0.0030650638511648502, 0.002589957373238313, 0.0026688495924473946, 0.002652800486780452]

data_es_ucb_3 = [0.05478200901906885, 0.055326539097891834, 0.048980881456098795, 0.04750018431072762, 0.047714183499653194, 0.051816543300746615, 0.052959591316833664, 0.05255427552315108, 0.04837418604400829, 0.046615105993282, 0.044243997515042606, 0.05161459883405684, 0.045855801293581896, 0.04247350177058854, 0.04300421890666596, 0.040434179878229, 0.03904062911563311, 0.0377638278810075, 0.03269788833693841, 0.03378999375748199, 0.035732458167288775, 0.03499434806761739, 0.0348841376552401, 0.034754896429567944, 0.03448763530373247, 0.034222585231586444, 0.03353962738966049, 0.03324417202702226, 0.032398018740721464, 0.03324520559611603, 0.03205963228155513, 0.03083689533845577, 0.028158649073074887, 0.0265249107565831, 0.023792103429415994, 0.020557390386698647, 0.020379259191571793, 0.021181276272342706, 0.02227836746439875, 0.021917464448229288, 0.02174364168974095, 0.02136224020629669, 0.02124092445250424, 0.02154620845451217, 0.02168642094140593, 0.02220409694470401, 0.02163868173164847, 0.021368383023243332, 0.01641846720507395, 0.009665562727034404, 0.00821203650186862, 0.009956711203674386]
plt.plot(data_greedy_ucb_3, label="greedy_ucb_10_prior")
plt.plot(data_greedy_ucb_3_no_prior, label="greedy_ucb_0_prior")
plt.plot(data_es_ucb_3, label="es_ucb")


plt.xlabel('Time')
plt.ylabel('Value')
plt.title('Line Graphs from Text Files')
plt.legend()
plt.show()