import numpy as np
import matplotlib.pyplot as plt

def generate_sequence(start_value, end_value, length):
    sequence = [start_value]
    for index in range(length - 1):
        # 计算当前的最大下降值，确保序列是递减的，并且不会低于最终的目标值end_value
        decrement = (sequence[-1] - end_value) / (length - len(sequence))
        # 生成一个随机下降值
        ratio = (-abs(index-length/2)/(length/2)+1)**0.8

        decrement = np.random.normal(loc=decrement, scale=ratio*0.0016)
        # 添加新的值到序列
        sequence.append(sequence[-1] - decrement)
    sequence[-1] = end_value
    return sequence

# original data
data_greedy_no_prior = [0.05478200901906885, 0.055326539097891834, 0.05039720002915709, 0.05100698046210769, 0.05010458122887684, 0.04973485964394979, 0.04905513269063061, 0.05101471567267402, 0.050661263361211135, 0.05031922702819884, 0.05138651227386776, 0.05141497681225834, 0.05204020401166794, 0.0523358078282354, 0.052607742109167376, 0.052462254987265186, 0.05205690091574845, 0.05194573780068489, 0.05177937862398093, 0.05077970046995368, 0.04973880306078764, 0.049643108814839375, 0.049116983412663164, 0.04788251097967477, 0.04774437472223105, 0.04792205242267079, 0.04852666327722831, 0.04831949221607866, 0.047878754475595885, 0.04647252458258558, 0.045329556057313244, 0.04433687659595599, 0.04426874577544753, 0.0426315964455729, 0.037699547449923015, 0.03160711322706472, 0.029001268307424135, 0.028878738403100134, 0.026035062003404205, 0.024478911465697584, 0.024891225240225325, 0.025616293761089662, 0.02753032808698398, 0.026385709346779133, 0.025780539459919205, 0.026140121789316, 0.025901473158638316, 0.0255320196877246, 0.025728462763385834, 0.025271571670659774, 0.023303874614601785, 0.022630245579836002, 0.02247866665244576, 0.02240271782923061, 0.022282743258996394, 0.021962170669058152, 0.021571822164273523, 0.021253087970019912, 0.02130417195014594, 0.021165963870148845, 0.021068205919176658, 0.021087407547640345, 0.021041273234078815, 0.020987438516570905, 0.020988009582299797, 0.021007034703892657, 0.020979077286639294, 0.021180549018593554, 0.021268760778916113, 0.02122456471974113, 0.021304296236304393, 0.02128369022265196, 0.02131810135856742, 0.021326930903798426, 0.021346633954576213, 0.02134813553954029, 0.019961140873733012, 0.019475266764146515, 0.01766844912717113, 0.012982123028437187, 0.009282380273473986, 0.009262256296769755, 0.009164943519911022, 0.009597961520240613, 0.009315061152607048, 0.008991336072677396, 0.009135485035356213, 0.00923703172688461, 0.009042211775864567, 0.009035864215912357, 0.009000014076622334, 0.00877183835147625, 0.008589364828297526, 0.008364421635133661, 0.007809726950556966, 0.0063511800499731885, 0.0062268875140020444, 0.00565232931485955, 0.0044095833665172245, 0.0035669044466006307, 0.003578985963525109, 0.0037918542757139424, 0.003628707301256244, 0.0030650638511648502, 0.002589957373238313, 0.0026688495924473946, 0.002652800486780452]


START_VALUE = 0.05478
END_VALUE = 0.0025
length = 100


sequences = []
for _ in range(10):
    # 随机选择数据长度
    # length = int(np.random.normal(loc=86, scale=13))
    length = int(np.random.normal(loc=111, scale=14))
    end_value = np.random.normal(loc=END_VALUE, scale=0.0001)
    sequence = generate_sequence(START_VALUE, end_value, length)
    sequences.append(sequence)


# 仅为验证，我们打印出第一组模拟数据的前10个数据点

plt.plot(data_greedy_no_prior, label="data_greedy_no_prior")
plt.plot(sequences[0], label="simulated_data_sets")
plt.plot(sequences[1], label="simulated_data_sets")
plt.plot(sequences[2], label="simulated_data_sets")


plt.xlabel('Time')
plt.ylabel('Value')
plt.title('Line Graphs from Text Files')
plt.legend()
plt.show()